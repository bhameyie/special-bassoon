// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: presence.proto

#include "presence.pb.h"
#include "presence.grpc.pb.h"

#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/sync_stream.h>
#include <gmock/gmock.h>
namespace presence {

class MockPresenceRecorderStub : public PresenceRecorder::StubInterface {
 public:
  MOCK_METHOD3(UpdateStatus, ::grpc::Status(::grpc::ClientContext* context, const ::presence::UpdateUserConnectionRequest& request, ::presence::UpdateUserConnectionReply* response));
  MOCK_METHOD3(AsyncUpdateStatusRaw, ::grpc::ClientAsyncResponseReaderInterface< ::presence::UpdateUserConnectionReply>*(::grpc::ClientContext* context, const ::presence::UpdateUserConnectionRequest& request, ::grpc::CompletionQueue* cq));
  MOCK_METHOD3(PrepareAsyncUpdateStatusRaw, ::grpc::ClientAsyncResponseReaderInterface< ::presence::UpdateUserConnectionReply>*(::grpc::ClientContext* context, const ::presence::UpdateUserConnectionRequest& request, ::grpc::CompletionQueue* cq));
};

class MockPresenceRetrieverStub : public PresenceRetriever::StubInterface {
 public:
  MOCK_METHOD3(RetrieveUserPresenceByUserId, ::grpc::Status(::grpc::ClientContext* context, const ::presence::RetrieveUserPresenceByIdRequest& request, ::presence::RetrieveUserPresenceByIdResponse* response));
  MOCK_METHOD3(AsyncRetrieveUserPresenceByUserIdRaw, ::grpc::ClientAsyncResponseReaderInterface< ::presence::RetrieveUserPresenceByIdResponse>*(::grpc::ClientContext* context, const ::presence::RetrieveUserPresenceByIdRequest& request, ::grpc::CompletionQueue* cq));
  MOCK_METHOD3(PrepareAsyncRetrieveUserPresenceByUserIdRaw, ::grpc::ClientAsyncResponseReaderInterface< ::presence::RetrieveUserPresenceByIdResponse>*(::grpc::ClientContext* context, const ::presence::RetrieveUserPresenceByIdRequest& request, ::grpc::CompletionQueue* cq));
};

} // namespace presence

